//ЗАДАЧА № 1


// Дан массив цен. Тип значения number. Сформировать на его основании новый массив, где значения будут вида ‘100 р’ (цена и знак рубля, в виде строки) [100, 150, 200, 250]

let price = [100, 150, 200, 250];

let formattedprice = price.map(costs =>  `${costs} ₽`);


console.log(formattedprice); //// Выведет: ['100 ₽', '150 ₽', '200 ₽', '250 ₽'] 


//Использовал короткую форму записи стрелочной функции, которая подходит для случаев, когда тело функции состоит из одного выражения, как в нашем случае.








//ЗАДАЧА № 2


// Дан массив пользователей. Каждый пользователь представлен в виде массива, вида [‘alex’, 32]. Первое значение – имя (строкой), второе возраст, числом. Сформировать на его основе массив, где останутся только пользователя, старше 18 лет. [ [‘alex’, 32], [‘tomas’, 17], [‘olga’, 14], [‘andre’, 24] ] 



let people = [['alex', 32], ['tomas', 17], ['olga', 14], ['andre', 24]];

const ageVerification = people.filter(person  => person [1] >= 18);

console.log(ageVerification); //Выведет: ['alex', 32] ['andre', 24]

//ageVerification - массив, где останутся только пользователя, старше 18 лет






//2-ой способ решения. Через деструктуризацию массива


let people1 = [['alex', 32], ['tomas', 17], ['olga', 14], ['andre', 24]];

const ageVerification1 = people1.filter(([_, age]) => age >= 18);

console.log(ageVerification1);


//ageVerification - массив, где останутся только пользователя, старше 18 лет. Также использована стрелочная функция с неявным возвращением (=> age >= 18), чтобы сократить запись.









// ЗАДАЧА № 3
// Дан массив товаров, в виде объекта – { title: ‘пицца’, price: 100 }. Вычислить общую стоимость всех товаров

// [ { title: ‘пицца’, price: 200 }, { title: ‘баранина’, price: 300 }, { title: ‘креветки’, price: 400 } ]

let menu = [ 
    { title: "пицца", price: 200 }, 
    { title: "баранина", price: 300 }, 
    { title: "креветки", price: 400 } 
];

let allMenuPrice = 0;

for (let menuItem of menu){
    allMenuPrice += menuItem.price;
}

console.log(allMenuPrice); 

//После завершения цикла allMenuPrice содержит общую стоимость всех товаров в массиве menu.




